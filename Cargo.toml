[package]
name = "npy"
version = "0.4.0"
authors = ["Pavel Potocek <pavelpotocek@gmail.com>"]
license = "MIT"
description = "NumPy file format (de-)serialization"
repository = "https://github.com/potocpav/npy-rs"
homepage = "https://github.com/potocpav/npy-rs"
documentation = "https://docs.rs/npy/"
keywords = ["numpy", "npy"]
categories = ["encoding"]
readme = "README.md"

[workspace]
members = [ "npy-derive" ]

[dependencies]
byteorder = "1"
nom = "3"
num-complex = { version = "0.2", optional = true }

[dependencies.npy-derive]
path = "npy-derive"
version = "0.4"
optional = true
default-features = false

[dev-dependencies]
memmap = "0.6"

[features]
default = []

# Reexports the derive macros so that you can use them qualified under `npy::`:
#
#     #[derive(npy::Serialize, npy::Deserialize, npy::AutoSerialize)]
#     struct Struct { ... }
#
# This is a nicer alternative to `#[macro_use] extern crate npy_derive`, which
# directly imports things like `#[derive(Serialize)]` that may conflict with
# other crates (e.g. `serde`).
derive = ["npy-derive"]

# Enables deserialization of the types from num-complex.
complex = ["num-complex"]

[[example]]
name = "plain"

[[example]]
name = "large"
required-features = ["derive"]

[[example]]
name = "simple"
required-features = ["derive"]

[[example]]
name = "roundtrip"
required-features = ["derive"]

[[test]]
name = "derive_hygiene"
required-features = ["derive"]

[[test]]
name = "roundtrip"
required-features = ["derive"]

[[test]]
name = "serialize_array"
required-features = ["derive"]

[[test]]
name = "nd"
